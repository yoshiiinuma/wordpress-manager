---
- name: "Display the Wordpress configuration file of the specified site"
  hosts: prod
  gather_facts: no
  tasks:
  - fail: msg="domain_map is not defined; Run get-all-virtualhosts"
    when: domain_map is not defined
  #- name: Get all the virtual hosts from httpd.conf
  #  httpd_config:
  #  register: virtual_hosts
  #- name: Extract the document roots
  #  set_fact:
  #    docroots: "{{ virtual_hosts | json_query('servers[*].root' ) | sort | unique }}"
  #- name: Set configuration paths
  # set_fact:
  #   config_paths: "{{ docroots | product(['wp-config.php']) | map('join', '/') | list }}" 
  #- name: Display the document roots of all wordpress sites
  #  debug:
  #    var: config_paths
  #- name: Check if config file exists
  #  stat:
  #    path: "{{ item }}"
  #  with_items: "{{ config_paths }}"
  #  register: exist_test
  #- name: Summarize the test results
  #  debug:
  #    msg: "{{  item.item }}: {{ item.stat.exists }}" 
  #  loop: "{{ exist_test.results }}" 
  - name: Extract the Wordpress configuration
    wp_config:
      root: "{{ item.key }}"
      category: all
    ignore_errors: yes
    register: wpconf
    with_dict: "{{ domain_map }}"
  - name: Save wordpress configuration
    set_fact:
      wordpress: "{{ wordpress | default({}) | combine({ item.item.value: item.options }) }}"
      cacheable: yes
    loop: "{{ wpconf.results | json_query('[?options]') }}"
  - name: Save wordpress DB configuration
    set_fact:
      db: "{{ db | default({}) | combine({ item.key: item.value | json_query(db_option_filter) }) }}"
      cacheable: yes
    vars:
      db_option_filter: "{ host: DB_HOST, name: DB_NAME, user: DB_USER, pass: DB_PASSWORD }"
    with_dict: "{{ wordpress }}"
